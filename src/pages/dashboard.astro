---
// Living Agent Dashboard - Night of the Living Agents
import '../styles/globals.css';
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üëÅÔ∏è Agent Dashboard - HUNTING</title>
    <style>
        @keyframes pulse-glow {
            0%, 100% {
                box-shadow: 0 0 20px #00ff41, 0 0 40px #00ff41;
                opacity: 1;
            }
            50% {
                box-shadow: 0 0 30px #00ff41, 0 0 60px #00ff41;
                opacity: 0.7;
            }
        }
        @keyframes pulse-eye {
            0%, 100% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.8; }
        }
        @keyframes scanner {
            0% { transform: translateY(-100%); }
            100% { transform: translateY(300%); }
        }
        @keyframes flicker {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }
        @keyframes slide-up {
            from { transform: translateY(10px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        .glow-green {
            color: #00ff41;
            text-shadow: 0 0 10px #00ff41, 0 0 20px #00ff41;
        }
        .glow-purple {
            color: #8b00ff;
            text-shadow: 0 0 10px #8b00ff;
        }
        .glow-red {
            color: #ff0040;
            text-shadow: 0 0 10px #ff0040, 0 0 20px #ff0040;
        }
        .glow-orange {
            color: #ff6600;
            text-shadow: 0 0 10px #ff6600;
        }
        .scanner-line {
            position: absolute;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, #00ff41, transparent);
            animation: scanner 3s linear infinite;
            pointer-events: none;
        }
        .card-glow {
            background: rgba(26, 26, 26, 0.8);
            border: 1px solid #333;
            box-shadow: 0 0 15px rgba(0, 255, 65, 0.2);
        }
        .card-glow-purple {
            background: rgba(26, 26, 26, 0.8);
            border: 1px solid #8b00ff;
            box-shadow: 0 0 15px rgba(139, 0, 255, 0.3);
        }
        .pulse-eye {
            animation: pulse-eye 2s ease-in-out infinite;
            display: inline-block;
        }
        .status-active {
            animation: pulse-glow 2s ease-in-out infinite;
        }
        .flicker {
            animation: flicker 3s ease-in-out infinite;
        }
        .activity-item {
            animation: slide-up 0.3s ease-out;
        }
        .price-bar {
            transition: width 0.5s ease-out;
            background: linear-gradient(90deg, #00ff41, #8b00ff);
        }
        .grid-bg {
            background-image:
                linear-gradient(rgba(0, 255, 65, 0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px);
            background-size: 20px 20px;
        }
        .booking-link {
            display: block;
            padding: 4px 8px;
            background: rgba(139, 0, 255, 0.1);
            border: 1px solid #8b00ff;
            border-radius: 4px;
            color: #8b00ff;
            text-decoration: none;
            font-size: 11px;
            transition: all 0.2s ease;
            word-break: break-all;
        }
        .booking-link:hover {
            background: rgba(139, 0, 255, 0.2);
            box-shadow: 0 0 8px rgba(139, 0, 255, 0.3);
            color: #ffffff;
        }
    </style>
</head>
<body class="min-h-screen grid-bg" style="background-color: #0a0a0a; color: #ffffff;">
    <div class="container mx-auto px-4 py-6 max-w-7xl">

        <!-- SECTION 1: HEADER -->
        <div class="mb-8">
            <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                <div class="scanner-line"></div>

                <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                    <div>
                        <h1 class="text-4xl md:text-5xl font-bold mb-2">
                            <span class="glow-green">üëÅÔ∏è NIGHT OF THE LIVING AGENTS</span>
                        </h1>
                        <div id="agent-status" class="text-2xl font-bold status-active">
                            <span class="pulse-eye">üëÅÔ∏è</span>
                            <span class="glow-green">Agent Status: HUNTING</span>
                        </div>
                    </div>

                    <div class="flex flex-col gap-2 text-right">
                        <div class="text-sm glow-purple">
                            <span class="flicker">üìä</span> Checked <span id="price-count" class="text-xl font-bold">0</span> prices
                        </div>
                        <div class="text-sm glow-orange">
                            ‚è±Ô∏è Next check in: <span id="countdown" class="text-xl font-bold">10</span>s
                        </div>
                    </div>
                </div>

                <!-- Trip Info -->
                <div id="trip-info" class="mt-4 pt-4 border-t border-gray-700">
                    <div class="text-sm glow-purple">
                        üéØ <span id="trip-route">Loading mission...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- SECTION 2: CURRENT BEST DEAL -->
        <div class="mb-8">
            <h2 class="text-2xl font-bold glow-purple mb-4">
                üí∞ CURRENT SCAN RESULTS
            </h2>

            <div id="deal-status" class="mb-4 p-4 rounded-lg text-center text-2xl font-bold" style="display: none;">
                <!-- Will be populated with deal status -->
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                <!-- Flight Card -->
                <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                    <div class="scanner-line"></div>
                    <div class="text-sm glow-green mb-2">‚úàÔ∏è FLIGHT</div>
                    <div id="flight-price" class="text-3xl font-bold mb-2">$---</div>
                    <div id="flight-carrier" class="text-sm mb-1">---</div>
                    <div id="flight-budget" class="text-xs">Budget: $---</div>
                    <div id="flight-status" class="mt-2 text-xs font-bold">‚è≥ Scanning...</div>
                    <div id="flight-booking" class="mt-3 pt-3 border-t border-gray-700" style="display: none;">
                        <div class="text-xs glow-purple mb-2">üîó Book Now:</div>
                        <div id="flight-links" class="space-y-1"></div>
                    </div>
                </div>

                <!-- Hotel Card -->
                <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                    <div class="scanner-line"></div>
                    <div class="text-sm glow-green mb-2">üè® HOTEL</div>
                    <div id="hotel-price" class="text-3xl font-bold mb-2">$---</div>
                    <div id="hotel-name" class="text-sm mb-1">---</div>
                    <div id="hotel-budget" class="text-xs">Budget: $---/night</div>
                    <div id="hotel-status" class="mt-2 text-xs font-bold">‚è≥ Scanning...</div>
                    <div id="hotel-booking" class="mt-3 pt-3 border-t border-gray-700" style="display: none;">
                        <div class="text-xs glow-purple mb-2">üîó Book Now:</div>
                        <div id="hotel-links" class="space-y-1"></div>
                    </div>
                </div>

                <!-- Car Card -->
                <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                    <div class="scanner-line"></div>
                    <div class="text-sm glow-green mb-2">üöó CAR RENTAL</div>
                    <div id="car-price" class="text-3xl font-bold mb-2">$---</div>
                    <div id="car-type" class="text-sm mb-1">---</div>
                    <div id="car-budget" class="text-xs">Budget: $---/day</div>
                    <div id="car-status" class="mt-2 text-xs font-bold">‚è≥ Scanning...</div>
                    <div id="car-booking" class="mt-3 pt-3 border-t border-gray-700" style="display: none;">
                        <div class="text-xs glow-purple mb-2">üîó Book Now:</div>
                        <div id="car-links" class="space-y-1"></div>
                    </div>
                </div>
            </div>

            <!-- Total Cost Display -->
            <div class="card-glow-purple rounded-lg p-8 text-center relative overflow-hidden">
                <div class="scanner-line"></div>
                <div class="text-sm glow-purple mb-2">üíÄ TOTAL COST</div>
                <div id="total-cost" class="text-6xl font-bold glow-green mb-2">$---</div>
                <div id="total-budget" class="text-sm">Budget: $---</div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- SECTION 3: PRICE HISTORY GRAPH -->
            <div>
                <h2 class="text-2xl font-bold glow-purple mb-4">
                    üìà PRICE SURVEILLANCE LOG
                </h2>
                <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                    <div class="scanner-line"></div>
                    <div id="price-chart" class="space-y-2">
                        <div class="text-sm glow-green text-center py-8">
                            ‚è≥ Gathering intelligence...
                        </div>
                    </div>
                </div>
            </div>

            <!-- SECTION 4: AGENT ACTIVITY LOG -->
            <div>
                <h2 class="text-2xl font-bold glow-purple mb-4">
                    üìã AGENT ACTIVITY LOG
                </h2>
                <div class="card-glow rounded-lg p-6 relative overflow-hidden">
                    <div class="scanner-line"></div>
                    <div id="activity-log" class="space-y-2">
                        <div class="activity-item text-sm">
                            <span class="glow-green">ü§ñ</span> Agent initialized...
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Back Link -->
        <div class="mt-8 text-center">
            <a href="/" class="text-sm glow-purple hover:glow-green transition">
                ‚Üê Return to Mission Control
            </a>
        </div>
    </div>

    <script type="module">
        // Generate or get user ID
        function getUserId() {
            let userId = localStorage.getItem('userId');
            if (!userId) {
                userId = 'user-' + Math.random().toString(36).substring(2, 15);
                localStorage.setItem('userId', userId);
            }
            return userId;
        }

        // Get trip details from localStorage
        function getTripDetails() {
            const tripData = localStorage.getItem('tripDetails');
            if (!tripData) {
                window.location.href = '/';
                return null;
            }
            return JSON.parse(tripData);
        }

        // Activity log management
        const maxActivities = 5;
        let activities = [];

        function addActivity(message, type = 'info') {
            const timestamp = new Date().toLocaleTimeString();
            const icons = {
                info: 'ü§ñ',
                success: '‚úÖ',
                warning: '‚ö†Ô∏è',
                error: '‚ùå',
                search: 'üîç'
            };

            activities.unshift({
                message,
                timestamp,
                icon: icons[type] || icons.info,
                type
            });

            if (activities.length > maxActivities) {
                activities = activities.slice(0, maxActivities);
            }

            updateActivityLog();
        }

        function updateActivityLog() {
            const logContainer = document.getElementById('activity-log');
            logContainer.innerHTML = activities.map(activity => `
                <div class="activity-item text-sm flex justify-between items-start border-b border-gray-800 pb-2">
                    <span>
                        <span class="glow-green">${activity.icon}</span>
                        ${activity.message}
                    </span>
                    <span class="text-xs glow-purple">${activity.timestamp}</span>
                </div>
            `).join('');
        }

        // Price history management
        let priceHistory = [];

        function addPriceToHistory(priceData) {
            priceHistory.push({
                totalCost: priceData.totalCost,
                timestamp: new Date().toLocaleTimeString(),
                withinBudget: priceData.withinTotalBudget
            });

            if (priceHistory.length > 10) {
                priceHistory = priceHistory.slice(-10);
            }

            updatePriceChart();
        }

        function updatePriceChart() {
            const chartContainer = document.getElementById('price-chart');

            if (priceHistory.length === 0) {
                chartContainer.innerHTML = '<div class="text-sm glow-green text-center py-8">‚è≥ Gathering intelligence...</div>';
                return;
            }

            const maxPrice = Math.max(...priceHistory.map(p => p.totalCost));

            chartContainer.innerHTML = priceHistory.map((item, index) => {
                const percentage = (item.totalCost / maxPrice) * 100;
                const color = item.withinBudget ? '#00ff41' : '#ff0040';

                return `
                    <div class="mb-3">
                        <div class="flex justify-between text-xs mb-1">
                            <span class="glow-purple">${item.timestamp}</span>
                            <span class="${item.withinBudget ? 'glow-green' : 'glow-red'}">
                                $${item.totalCost.toLocaleString()}
                                ${item.withinBudget ? '‚úÖ' : '‚ùå'}
                            </span>
                        </div>
                        <div class="h-6 bg-gray-900 rounded overflow-hidden">
                            <div class="price-bar h-full" style="width: ${percentage}%; background-color: ${color};"></div>
                        </div>
                    </div>
                `;
            }).join('');
        }

        // State management
        let state = {
            userId: getUserId(),
            tripDetails: getTripDetails(),
            priceCheckCount: 0,
            countdown: 10,
            isChecking: false,
            lastPriceData: null
        };

        if (!state.tripDetails) {
            addActivity('No trip data found. Redirecting to mission control...', 'error');
            setTimeout(() => window.location.href = '/', 2000);
        }

        // Update UI with trip info
        function updateTripInfo() {
            const { origin, destination, startDate, endDate, totalBudget } = state.tripDetails;
            document.getElementById('trip-route').textContent =
                `${origin} ‚Üí ${destination} | ${startDate} to ${endDate} | Budget: $${totalBudget.toLocaleString()}`;
        }

        // Check prices
        async function checkPrices() {
            if (state.isChecking) return;

            state.isChecking = true;
            addActivity('Initiating price scan...', 'search');

            try {
                const response = await fetch('/api/check-prices', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'x-user-id': state.userId
                    },
                    body: JSON.stringify(state.tripDetails)
                });

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }

                const data = await response.json();
                state.lastPriceData = data;
                state.priceCheckCount++;

                updatePriceDisplay(data);
                addPriceToHistory(data);

                if (data.withinTotalBudget) {
                    addActivity(`Deal found! $${data.totalCost} within budget`, 'success');
                } else {
                    addActivity(`Scan complete. $${data.totalCost} (over budget)`, 'info');
                }

                document.getElementById('price-count').textContent = state.priceCheckCount;

                if (data.raindropEnabled) {
                    addActivity('Data saved to SmartBucket', 'success');
                }

            } catch (error) {
                console.error('Error checking prices:', error);
                addActivity(`Scan error: ${error.message}`, 'error');
            } finally {
                state.isChecking = false;
            }
        }

        // Update price display
        function updatePriceDisplay(data) {
            const { flight, hotel, car, totalCost, withinTotalBudget } = data;
            const { flightBudget, hotelBudgetPerNight, carBudgetPerDay, totalBudget } = state.tripDetails;

            // Flight
            document.getElementById('flight-price').textContent = `$${flight.price}`;
            document.getElementById('flight-carrier').textContent = flight.carrier;
            document.getElementById('flight-budget').textContent = `Budget: $${flightBudget}`;
            document.getElementById('flight-status').innerHTML = flight.withinBudget
                ? '<span class="glow-green">‚úÖ Within Budget</span>'
                : '<span class="glow-red">‚ùå Over Budget</span>';

            // Display flight booking links
            updateBookingLinks('flight', flight.bookingUrls || []);

            // Hotel
            document.getElementById('hotel-price').textContent = `$${hotel.pricePerNight}/night`;
            document.getElementById('hotel-name').textContent = hotel.name;
            document.getElementById('hotel-budget').textContent = `Budget: $${hotelBudgetPerNight}/night`;
            document.getElementById('hotel-status').innerHTML = hotel.withinBudget
                ? '<span class="glow-green">‚úÖ Within Budget</span>'
                : '<span class="glow-red">‚ùå Over Budget</span>';

            // Display hotel booking links
            updateBookingLinks('hotel', hotel.bookingUrls || []);

            // Car
            document.getElementById('car-price').textContent = `$${car.pricePerDay}/day`;
            document.getElementById('car-type').textContent = car.type;
            document.getElementById('car-budget').textContent = `Budget: $${carBudgetPerDay}/day`;
            document.getElementById('car-status').innerHTML = car.withinBudget
                ? '<span class="glow-green">‚úÖ Within Budget</span>'
                : '<span class="glow-red">‚ùå Over Budget</span>';

            // Display car booking links
            updateBookingLinks('car', car.bookingUrls || []);

            // Total
            document.getElementById('total-cost').textContent = `$${totalCost.toLocaleString()}`;
            document.getElementById('total-budget').textContent = `Budget: $${totalBudget.toLocaleString()}`;

            // Deal status banner
            const dealStatus = document.getElementById('deal-status');
            dealStatus.style.display = 'block';
            if (withinTotalBudget) {
                dealStatus.className = 'mb-4 p-4 rounded-lg text-center text-2xl font-bold card-glow status-active';
                dealStatus.innerHTML = '<span class="glow-green">üéâ DEAL FOUND - WITHIN BUDGET! üéâ</span>';
            } else {
                dealStatus.className = 'mb-4 p-4 rounded-lg text-center text-2xl font-bold card-glow';
                dealStatus.innerHTML = '<span class="glow-red">üíÄ Keep hunting... Over budget by $' +
                    (totalCost - totalBudget).toLocaleString() + '</span>';
            }
        }

        // Update booking links for each service
        function updateBookingLinks(service, urls) {
            const bookingContainer = document.getElementById(`${service}-booking`);
            const linksContainer = document.getElementById(`${service}-links`);

            if (urls && urls.length > 0) {
                bookingContainer.style.display = 'block';
                linksContainer.innerHTML = urls.map((url, index) => {
                    const domain = new URL(url).hostname;
                    return `<a href="${url}" target="_blank" class="booking-link" rel="noopener noreferrer">
                        ${index + 1}. ${domain}
                    </a>`;
                }).join('');
            } else {
                bookingContainer.style.display = 'none';
            }
        }

        // Countdown timer
        function startCountdown() {
            state.countdown = 7200; // 2 hours = 7200 seconds

            const countdownInterval = setInterval(() => {
                state.countdown--;
                document.getElementById('countdown').textContent = state.countdown;

                if (state.countdown <= 0) {
                    clearInterval(countdownInterval);
                    checkPrices();
                    startCountdown(); // Restart countdown
                }
            }, 1000);
        }

        // Initialize
        async function init() {
            addActivity('Dashboard initialized', 'success');
            updateTripInfo();

            // Initial price check
            await checkPrices();

            // Start auto-refresh countdown
            startCountdown();

            addActivity('Auto-refresh enabled (2hr interval)', 'info');
        }

        // Start the dashboard
        init();
    </script>
</body>
</html>
